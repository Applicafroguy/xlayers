steps:
- name: 'gcr.io/cross-xlayers/ngcontainer'
  entrypoint: 'bash'
  
  # Check BUILD.bazel formatting before we have a node_modules directory
  # Then we don't need any exclude pattern to avoid checking those files
  args: 
    - '-c'
    - |
    - buildifier -mode=check $(find . -type f \( -name "*.bzl" -or -name BUILD.bazel -or -name BUILD \)) || 
        (echo "BUILD files not formatted." ; exit 1'

- name: 'gcr.io/cross-xlayers/ngcontainer'
  entrypoint: 'bash'
  
  # Run the skylark linter to check our Bazel rules
  # deprecated-api is disabled because we use actions.new_file(genfiles_dir)
  # which has no replacement, see https://github.com/bazelbuild/bazel/issues/4858
  args: 
    - '-c'
    - |
    - find . -type f -name "*.bzl" |
              xargs java -jar /usr/local/bin/Skylint_deploy.jar --disable-checks=deprecated-api || 
              (echo -e "\n.bzl files have lint errors. Please run ''yarn skylint''"; exit 1)

- name: gcr.io/cross-xlayers/ngcontainer
  args: ['bazel', 'run', '@yarn//:yarn']
- name: gcr.io/cross-xlayers/ngcontainer
  args: ['bazel', 'build', '//...']
# - name: gcr.io/cross-xlayers/ngcontainer
#   args: ['bazel', 'test', '//...']

## TODO: enable an Ingress controller for k8s in order to preview each new build   

# - name: 'gcr.io/cloud-builders/docker'
#   args: ['build', '-t', 'gcr.io/$PROJECT_ID/xlayers:$SHORT_SHA', '.']
# - name: 'gcr.io/cloud-builders/docker'
#   args: ['push', 'gcr.io/$PROJECT_ID/xlayers:$SHORT_SHA']
# - name: 'gcr.io/cloud-builders/kubectl'
#   args:
#   - 'set'
#   - 'image'
#   - 'deployment/$PROJECT_ID-staging'
#   - 'xlayers=gcr.io/$PROJECT_ID/xlayers'
#   env:
#   - 'CLOUDSDK_COMPUTE_ZONE=europe-north1-a'
#   - 'CLOUDSDK_CONTAINER_CLUSTER=xlayers-staging'

# images:
#   - 'gcr.io/$PROJECT_ID/xlayers:$SHORT_SHA'
#   - 'gcr.io/$PROJECT_ID/xlayers'
